{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\verma\\\\OneDrive\\\\Desktop\\\\Web Dev Adv\\\\React\\\\React\\\\07-usepopcorn\\\\starter\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport StarRating from \"./StarRating\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst average = arr => arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\nconst KEY = \"f608407f\";\nexport default function App() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [watched, setWatched] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [selectedId, setSelectedId] = useState(null);\n  function handleSelectMovie(id) {\n    setSelectedId(selectedId => id === selectedId ? null : id);\n  }\n  function handleCloseMovie() {\n    setSelectedId(null);\n  }\n  function handleAddWatch(movie) {\n    setWatched(watched => [...watched, movie]);\n  }\n  function handleDeleteWatch(id) {\n    setWatched(watched => watched.filter(movie => movie.imdbID !== id));\n  }\n  useEffect(function () {\n    const controller = new AbortController();\n    async function fetchMovies() {\n      try {\n        setIsLoading(true);\n        setError(\"\");\n        const res = await fetch(`http://www.omdbapi.com/?apiKey=${KEY}&s=${query}`, {\n          signal: controller.signal\n        });\n        if (!res.ok) throw new Error(\"Something went wrong with fetching movies!\");\n        const data = await res.json();\n        // console.log(data);\n\n        if (data.Response === \"False\") throw new Error(\"Movie not found !\");\n        setMovies(data.Search);\n        // console.log(movies);\n\n        setError(\"\");\n      } catch (err) {\n        // console.error(err.message);\n\n        if (err.name !== \"AbortError\") {\n          console.log(err.message);\n          setError(err.message);\n        }\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    if (!query.length) {\n      setMovies([]);\n      setError(\"\");\n      return;\n    }\n    handleCloseMovie();\n    fetchMovies(); // here we just call the function\n\n    // Cleanup function:\n    return function () {\n      controller.abort();\n    };\n  }, [query]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        query: query,\n        setQuery: setQuery\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NumResults, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        children: [isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), !isLoading && !error && /*#__PURE__*/_jsxDEV(MovieList, {\n          movies: movies,\n          onSelectMovie: handleSelectMovie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          message: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: selectedId ? /*#__PURE__*/_jsxDEV(MovieDetails, {\n          selectedId: selectedId,\n          onCloseMovie: handleCloseMovie,\n          onAddWatched: handleAddWatch,\n          watched: watched\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this) // based on selectedId, we display the movie details on the right box of\n        :\n        /*#__PURE__*/\n        //              screen\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(WatchedSummary, {\n            watched: watched\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(WatchedMoviesList, {\n            watched: watched,\n            onDeleteWatched: handleDeleteWatch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) // if no selectedId is false, i.e. there os no selected movie, we display this React Fragment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"myZkOD4LVo7tCWym2oTNSxyD+TM=\");\n_c = App;\nfunction Loader() {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"loader\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 10\n  }, this);\n}\n_c2 = Loader;\nfunction ErrorMessage(_ref) {\n  let {\n    message\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u26D4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), \" \", message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_c3 = ErrorMessage;\nfunction NavBar(_ref2) {\n  let {\n    children\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"nav-bar\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_c4 = NavBar;\nfunction Logo() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logo\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      role: \"img\",\n      children: \"\\uD83C\\uDF7F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"usePopcorn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n_c5 = Logo;\nfunction Search(_ref3) {\n  let {\n    query,\n    setQuery\n  } = _ref3;\n  // const [query, setQuery] = useState(\"\");\n\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    className: \"search\",\n    type: \"text\",\n    placeholder: \"Search movies...\",\n    value: query,\n    onChange: e => setQuery(e.target.value)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_c6 = Search;\nfunction NumResults(_ref4) {\n  let {\n    movies\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"num-results\",\n    children: [\"Found \", /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: movies.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), \" results\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n_c7 = NumResults;\nfunction Main(_ref5) {\n  let {\n    children\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"main\",\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 10\n  }, this);\n}\n_c8 = Main;\nfunction Box(_ref6) {\n  _s2();\n  let {\n    children\n  } = _ref6;\n  // instead of using children prop to solve prop drilling, we can also use an explicit pro (like element we used here instead of children)\n\n  const [isOpen, setIsOpen] = useState(true);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"box\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn-toggle\",\n      onClick: () => setIsOpen(open => !open),\n      children: isOpen ? \"–\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), isOpen && children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n/*\nfunction WatchedBox() {\n  const [watched, setWatched] = useState(tempWatchedData);\n  const [isOpen2, setIsOpen2] = useState(true);\n\n  return (\n    <div className=\"box\">\n      <button\n        className=\"btn-toggle\"\n        onClick={() => setIsOpen2((open) => !open)}\n      >\n        {isOpen2 ? \"–\" : \"+\"}\n      </button>\n      {isOpen2 && (\n        <>\n          <WatchedSummary watched={watched} />\n          <WatchedMoviesList watched={watched} />\n        </>\n      )}\n    </div>\n  );\n}\n*/\n_s2(Box, \"mEi83NlPXQzy/XIDfTYWzOSvaHw=\");\n_c9 = Box;\nfunction MovieList(_ref7) {\n  let {\n    movies,\n    onSelectMovie\n  } = _ref7;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list list-movies\",\n    children: movies === null || movies === void 0 ? void 0 : movies.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n      movie: movie,\n      onSelectMovie: onSelectMovie\n    }, movie.imdbID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_c10 = MovieList;\nfunction Movie(_ref8) {\n  let {\n    movie,\n    onSelectMovie\n  } = _ref8;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    onClick: () => onSelectMovie(movie.imdbID),\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster,\n      alt: `${movie.Title} poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83D\\uDDD3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.Year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_c11 = Movie;\nfunction MovieDetails(_ref9) {\n  _s3();\n  var _watched$find;\n  let {\n    selectedId,\n    onCloseMovie,\n    onAddWatched,\n    watched\n  } = _ref9;\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [userRating, setUserRating] = useState(\"\");\n  const isWatched = watched.map(movie => movie.imdbID).includes(selectedId);\n  const watchedUserRating = (_watched$find = watched.find(movie => movie.imdbID === selectedId)) === null || _watched$find === void 0 ? void 0 : _watched$find.userRating;\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre\n  } = movie;\n\n  // // Lec 16. THE RULES OF HOOKS IN PRACTICE:\n\n  // // So lets do as just below(returning a hook conditionally) and then call hook after an early return below it. VSCode will immediately complain and tell us that just below we are not allowed to use useState conditionally. But we can disable this rule by writing eslint-disable inside /* */:\n  // /* disable eslint here(write eslint-disable) */\n  // if (imdbRating > 8) [isTop, setIsTop] = useState(true); // Now, searching interstellar and selecting interstellar wars (2016), we now have no problem as we can see in the component tree that MovieDetails components still has the 6 hooks(3 states from top level and 3 effects). That's because its rating is just 1.7. But now when we click interstellar (2014), our application immediately stops working. On console we can see the error that React has detected a change in the order of Hooks called by MovieDetails. It also tells some useful information. So in the previous render, there were 3 useState hooks and then the number 4 was an effect and that previous render actually happened after we clicked on the movie but while the movie had not been fetched yet. So at that point the imdbRating here was still undefined and so then the useState hook here was not called. But as soon as the data arrived, the imdbRating was indeed greater than 8 and the then React called the useState here and so then on the next render, the 4th hook was no longer the useEffect but this useState from here. So now clearly we see that our linked list of hooks is different\n\n  // // Now one more thing that can happen is an early return:\n  // if (imdbRating > 8) return <p>Greatest ever!</p>; // Doing this will now give an error saying Rendered fewer hooks than expected and that's because we now have the three states from the top level but now, the 3 effects that we had are o longer created because of this early return. So instead of the 6 hooks, we now only have 3 hooks. So this again creates a big problem.\n\n  // // Lec 17. MORE DETAILS OF useState:\n  // // NOTE: in the useState hooks, the initial state that we pass only really matters on the initial render\n  // // So lets say we wanted something like if (imdbRating > 8) [isTop, setIsTop] = useState(true); to work here. So we wanted a piece of state called isTop which is true if the imdbRating is greater than 8. Now we cannot do if (imdbRating > 8) [isTop, setIsTop] = useState(true); as we already learned just above, but we might think that the just below line works:\n  // // const [isTop, setIsTop] = useState(imdbRating > 8);\n  // // console.log(isTop); // Now when we search for a movie(lets say interstellar) and select it, then we see that false is logged on console and it comes from this console.log() and false is logged even though the rating is actually greater than 8 and if we look at our list of hooks from the component tree, then we see that this state(which is the 4th state there) is false. This is because of the reason that whatever we pass into useState is the initial state and React will only look at this initial state on the initial render(so when the component first mounts). However, when the component first mounts here, the imdbRating will still be undefined and so the imdbRating > 0 that we passed inside useState here will be false and it will stay false forever because nowhere we update the state, and on second render, when we finally get tha movie data, this imdbRating > 8 that we passed in useState will not be executed again. So therefore, again, it will stay false forever. Now one way of fixing this would be useEffect as in the just below line:\n  // // useEffect(\n  // //   function () {\n  // //     setIsTop(imdbRating > 8); // In this case, now the above isTop is true when we select interstellar movie. We can even see the 4th state in the component tree, which will now be true.\n  // //   },\n  // //   [imdbRating] // we want to run this effect each time the imdbRating is changed so we passed it in dependency array\n  // // );\n  // // Now, ofcourse in this situation, we shouldn't even use a piece of state in the first place. So if the just above functionality of the state is what we really wanted then what we should do is derived state. So we should just do as in the just below line:\n  // const isTop2 = imdbRating > 8; // (in lecture just above code wass commented and variable here was isTop but I used isTop2 variable here)\n  // console.log(isTop2); // we see that this simple code for isTop2 derived state works seamlessly (So when we select interstellar movie, true is logged from this consol.log()). This is because this imdbRating variable here is generated each time that the function here is executed, so after each render.(So this is the power of derived stae, So it gets updated as the component gets re-rendered.)\n\n  // Now below we show another example that updating state is synchronous:\n  // For that, lets say we create a new state just below for displaying the average of the rating that we gave and the rating that is coming from IMDB, right there instead of closing the movie immediately. So for that we also comment the onCloseMovie() function call at the end of the handleAdd() function below:\n  const [averageRating, setAverageRating] = useState();\n  function handleAdd() {\n    const newWatchedMovie = {\n      imdbID: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating\n    };\n    onAddWatched(newWatchedMovie);\n    // onCloseMovie();\n  }\n\n  useEffect(function () {\n    function Callback(e) {\n      if (e.code === \"Escape\") onCloseMovie();\n      // console.log(\"CLOSING\");\n    }\n\n    document.addEventListener(\"keydown\", Callback);\n    return function () {\n      document.removeEventListener(\"keydown\", Callback);\n    };\n  }, [onCloseMovie]);\n  useEffect(function () {\n    async function getMovieDetails() {\n      setIsLoading(true);\n      const res = await fetch(`http://www.omdbapi.com/?apiKey=${KEY}&i=${selectedId}`);\n      const data = await res.json();\n      // console.log(data);\n      setMovie(data);\n      setIsLoading(false);\n    }\n    getMovieDetails();\n  }, [selectedId]);\n  useEffect(function () {\n    //we can change the title of the page in the browser just by setting document.title\n    if (!title) return;\n    document.title = `Movie | ${title}`;\n\n    // Cleanup function(A cleanup function is simply a function that we return from an effect):\n    return function () {\n      document.title = \"usePopcorn\";\n      // console.log(`Cleanup effect for movie ${title}`);\n    };\n  }, [title]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-back\",\n          onClick: onCloseMovie,\n          children: \"\\u2190\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: poster,\n          alt: `Poster of ${movie} movie`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details-overview\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [released, \" \\u2022 \", runtime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: genre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 17\n            }, this), imdbRating, \" IMDB rating\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating\",\n          children: !isWatched ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(StarRating, {\n              maxRating: 10,\n              size: 24,\n              onSetRating: setUserRating\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 19\n            }, this), userRating > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-add\",\n              onClick: handleAdd,\n              children: \"+ Add to list\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You rated this movie \", watchedUserRating, /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: plot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Starring \", actors]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Directed by \", director]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 381,\n    columnNumber: 5\n  }, this);\n}\n_s3(MovieDetails, \"fM8RN4D0O9MBe0V9kxHCZBg2YAE=\");\n_c12 = MovieDetails;\nfunction WatchedSummary(_ref10) {\n  let {\n    watched\n  } = _ref10;\n  const avgImdbRating = average(watched.map(movie => movie.imdbRating));\n  const avgUserRating = average(watched.map(movie => movie.userRating));\n  const avgRuntime = average(watched.map(movie => movie.runtime));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"summary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Movies you watched\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"#\\uFE0F\\u20E3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [watched.length, \" movies\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2B50\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: avgImdbRating.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDF1F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 459,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: avgUserRating.toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u23F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [avgRuntime, \" min\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 449,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 447,\n    columnNumber: 5\n  }, this);\n}\n_c13 = WatchedSummary;\nfunction WatchedMoviesList(_ref11) {\n  let {\n    watched,\n    onDeleteWatched\n  } = _ref11;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"list\",\n    children: watched.map(movie => /*#__PURE__*/_jsxDEV(WatchedMovie, {\n      movie: movie,\n      onDeleteWatched: onDeleteWatched\n    }, movie.imdbID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n}\n_c14 = WatchedMoviesList;\nfunction WatchedMovie(_ref12) {\n  let {\n    movie,\n    onDeleteWatched\n  } = _ref12;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.poster,\n      alt: `${movie.title} poster`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: movie.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2B50\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.imdbRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uD83C\\uDF1F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: movie.userRating\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u23F3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [movie.runtime, \" min\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-delete\",\n        onClick: () => onDeleteWatched(movie.imdbID)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 487,\n    columnNumber: 5\n  }, this);\n}\n_c15 = WatchedMovie;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Loader\");\n$RefreshReg$(_c3, \"ErrorMessage\");\n$RefreshReg$(_c4, \"NavBar\");\n$RefreshReg$(_c5, \"Logo\");\n$RefreshReg$(_c6, \"Search\");\n$RefreshReg$(_c7, \"NumResults\");\n$RefreshReg$(_c8, \"Main\");\n$RefreshReg$(_c9, \"Box\");\n$RefreshReg$(_c10, \"MovieList\");\n$RefreshReg$(_c11, \"Movie\");\n$RefreshReg$(_c12, \"MovieDetails\");\n$RefreshReg$(_c13, \"WatchedSummary\");\n$RefreshReg$(_c14, \"WatchedMoviesList\");\n$RefreshReg$(_c15, \"WatchedMovie\");","map":{"version":3,"names":["useEffect","useState","StarRating","jsxDEV","_jsxDEV","Fragment","_Fragment","average","arr","reduce","acc","cur","i","length","KEY","App","_s","query","setQuery","movies","setMovies","watched","setWatched","isLoading","setIsLoading","error","setError","selectedId","setSelectedId","handleSelectMovie","id","handleCloseMovie","handleAddWatch","movie","handleDeleteWatch","filter","imdbID","controller","AbortController","fetchMovies","res","fetch","signal","ok","Error","data","json","Response","Search","err","name","console","log","message","abort","children","NavBar","fileName","_jsxFileName","lineNumber","columnNumber","NumResults","Main","Box","Loader","MovieList","onSelectMovie","ErrorMessage","MovieDetails","onCloseMovie","onAddWatched","WatchedSummary","WatchedMoviesList","onDeleteWatched","_c","className","_c2","_ref","_c3","_ref2","Logo","_c4","role","_c5","_ref3","type","placeholder","value","onChange","e","target","_c6","_ref4","_c7","_ref5","_c8","_ref6","_s2","isOpen","setIsOpen","onClick","open","_c9","_ref7","map","Movie","_c10","_ref8","src","Poster","alt","Title","Year","_c11","_ref9","_s3","_watched$find","setMovie","userRating","setUserRating","isWatched","includes","watchedUserRating","find","title","year","poster","Runtime","runtime","imdbRating","Plot","plot","Released","released","Actors","actors","Director","director","Genre","genre","averageRating","setAverageRating","handleAdd","newWatchedMovie","Number","split","at","Callback","code","document","addEventListener","removeEventListener","getMovieDetails","maxRating","size","onSetRating","_c12","_ref10","avgImdbRating","avgUserRating","avgRuntime","toFixed","_c13","_ref11","WatchedMovie","_c14","_ref12","_c15","$RefreshReg$"],"sources":["C:/Users/verma/OneDrive/Desktop/Web Dev Adv/React/React/07-usepopcorn/starter/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport StarRating from \"./StarRating\";\n\nconst average = (arr) =>\n  arr.reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\n\nconst KEY = \"f608407f\";\n\nexport default function App() {\n  const [query, setQuery] = useState(\"\");\n  const [movies, setMovies] = useState([]);\n  const [watched, setWatched] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [error, setError] = useState(\"\");\n\n  const [selectedId, setSelectedId] = useState(null);\n\n  function handleSelectMovie(id) {\n    setSelectedId((selectedId) => (id === selectedId ? null : id));\n  }\n\n  function handleCloseMovie() {\n    setSelectedId(null);\n  }\n\n  function handleAddWatch(movie) {\n    setWatched((watched) => [...watched, movie]);\n  }\n\n  function handleDeleteWatch(id) {\n    setWatched((watched) => watched.filter((movie) => movie.imdbID !== id));\n  }\n\n  useEffect(\n    function () {\n      const controller = new AbortController();\n\n      async function fetchMovies() {\n        try {\n          setIsLoading(true);\n\n          setError(\"\");\n\n          const res = await fetch(\n            `http://www.omdbapi.com/?apiKey=${KEY}&s=${query}`,\n            { signal: controller.signal }\n          );\n\n          if (!res.ok)\n            throw new Error(\"Something went wrong with fetching movies!\");\n\n          const data = await res.json();\n          // console.log(data);\n\n          if (data.Response === \"False\") throw new Error(\"Movie not found !\");\n\n          setMovies(data.Search);\n          // console.log(movies);\n\n          setError(\"\");\n        } catch (err) {\n          // console.error(err.message);\n\n          if (err.name !== \"AbortError\") {\n            console.log(err.message);\n            setError(err.message);\n          }\n        } finally {\n          setIsLoading(false);\n        }\n      }\n\n      if (!query.length) {\n        setMovies([]);\n        setError(\"\");\n        return;\n      }\n\n      handleCloseMovie();\n      fetchMovies(); // here we just call the function\n\n      // Cleanup function:\n      return function () {\n        controller.abort();\n      };\n    },\n    [query]\n  );\n  return (\n    <>\n      <NavBar>\n        <Search query={query} setQuery={setQuery} />\n        <NumResults movies={movies} />\n      </NavBar>\n      <Main>\n        {/* <Box element={<MovieList movies={movies} />} />\n        <Box\n          element={\n            <>\n              <WatchedSummary watched={watched} />\n              <WatchedMoviesList watched={watched} />\n            </>\n          }\n        /> */}\n        {/* Above is prop drilling solution using explicity prop (element in this case. It can be anything. So we pass element as prop instead of children in the Box\n            component and conditionally render that element prop). In the 2nd <Box /> component above, we are passing a brand new piece of JSX, so here now we actually\n            need a fragment */}\n\n        {/* Below is prop drilling solution using children prop */}\n\n        <Box>\n          {/* {isLoading ? <Loader /> : <MovieList movies={movies} />} */}\n          {isLoading && <Loader />}\n          {!isLoading && !error && (\n            <MovieList movies={movies} onSelectMovie={handleSelectMovie} />\n          )}\n          {error && <ErrorMessage message={error} />}\n        </Box>\n\n        <Box>\n          {selectedId ? (\n            <MovieDetails\n              selectedId={selectedId}\n              onCloseMovie={handleCloseMovie}\n              onAddWatched={handleAddWatch}\n              watched={watched}\n            /> // based on selectedId, we display the movie details on the right box of\n          ) : (\n            //              screen\n            <>\n              <WatchedSummary watched={watched} />\n              <WatchedMoviesList\n                watched={watched}\n                onDeleteWatched={handleDeleteWatch}\n              />\n            </> // if no selectedId is false, i.e. there os no selected movie, we display this React Fragment\n          )}\n        </Box>\n      </Main>\n    </>\n  );\n}\n\nfunction Loader() {\n  return <p className=\"loader\">Loading...</p>;\n}\n\nfunction ErrorMessage({ message }) {\n  return (\n    <p className=\"error\">\n      <span>⛔</span> {message}\n    </p>\n  );\n}\n\nfunction NavBar({ children }) {\n  return (\n    <nav className=\"nav-bar\">\n      <Logo />\n      {children}\n    </nav>\n  );\n}\n\nfunction Logo() {\n  return (\n    <div className=\"logo\">\n      <span role=\"img\">🍿</span>\n      <h1>usePopcorn</h1>\n    </div>\n  );\n}\n\nfunction Search({ query, setQuery }) {\n  // const [query, setQuery] = useState(\"\");\n\n  return (\n    <input\n      className=\"search\"\n      type=\"text\"\n      placeholder=\"Search movies...\"\n      value={query}\n      onChange={(e) => setQuery(e.target.value)}\n    />\n  );\n}\n\nfunction NumResults({ movies }) {\n  return (\n    <p className=\"num-results\">\n      Found <strong>{movies.length}</strong> results\n    </p>\n  );\n}\n\nfunction Main({ children }) {\n  return <main className=\"main\">{children}</main>;\n}\n\nfunction Box({ children }) {\n  // instead of using children prop to solve prop drilling, we can also use an explicit pro (like element we used here instead of children)\n\n  const [isOpen, setIsOpen] = useState(true);\n\n  return (\n    <div className=\"box\">\n      <button className=\"btn-toggle\" onClick={() => setIsOpen((open) => !open)}>\n        {isOpen ? \"–\" : \"+\"}\n      </button>\n      {isOpen && children}\n    </div>\n  );\n}\n\n/*\nfunction WatchedBox() {\n  const [watched, setWatched] = useState(tempWatchedData);\n  const [isOpen2, setIsOpen2] = useState(true);\n\n  return (\n    <div className=\"box\">\n      <button\n        className=\"btn-toggle\"\n        onClick={() => setIsOpen2((open) => !open)}\n      >\n        {isOpen2 ? \"–\" : \"+\"}\n      </button>\n      {isOpen2 && (\n        <>\n          <WatchedSummary watched={watched} />\n          <WatchedMoviesList watched={watched} />\n        </>\n      )}\n    </div>\n  );\n}\n*/\n\nfunction MovieList({ movies, onSelectMovie }) {\n  return (\n    <ul className=\"list list-movies\">\n      {movies?.map((movie) => (\n        <Movie movie={movie} key={movie.imdbID} onSelectMovie={onSelectMovie} />\n      ))}\n    </ul>\n  );\n}\n\nfunction Movie({ movie, onSelectMovie }) {\n  return (\n    <li onClick={() => onSelectMovie(movie.imdbID)}>\n      <img src={movie.Poster} alt={`${movie.Title} poster`} />\n      <h3>{movie.Title}</h3>\n      <div>\n        <p>\n          <span>🗓</span>\n          <span>{movie.Year}</span>\n        </p>\n      </div>\n    </li>\n  );\n}\n\nfunction MovieDetails({ selectedId, onCloseMovie, onAddWatched, watched }) {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [userRating, setUserRating] = useState(\"\");\n\n  const isWatched = watched.map((movie) => movie.imdbID).includes(selectedId);\n\n  const watchedUserRating = watched.find(\n    (movie) => movie.imdbID === selectedId\n  )?.userRating;\n\n  const {\n    Title: title,\n    Year: year,\n    Poster: poster,\n    Runtime: runtime,\n    imdbRating,\n    Plot: plot,\n    Released: released,\n    Actors: actors,\n    Director: director,\n    Genre: genre,\n  } = movie;\n\n  // // Lec 16. THE RULES OF HOOKS IN PRACTICE:\n\n  // // So lets do as just below(returning a hook conditionally) and then call hook after an early return below it. VSCode will immediately complain and tell us that just below we are not allowed to use useState conditionally. But we can disable this rule by writing eslint-disable inside /* */:\n  // /* disable eslint here(write eslint-disable) */\n  // if (imdbRating > 8) [isTop, setIsTop] = useState(true); // Now, searching interstellar and selecting interstellar wars (2016), we now have no problem as we can see in the component tree that MovieDetails components still has the 6 hooks(3 states from top level and 3 effects). That's because its rating is just 1.7. But now when we click interstellar (2014), our application immediately stops working. On console we can see the error that React has detected a change in the order of Hooks called by MovieDetails. It also tells some useful information. So in the previous render, there were 3 useState hooks and then the number 4 was an effect and that previous render actually happened after we clicked on the movie but while the movie had not been fetched yet. So at that point the imdbRating here was still undefined and so then the useState hook here was not called. But as soon as the data arrived, the imdbRating was indeed greater than 8 and the then React called the useState here and so then on the next render, the 4th hook was no longer the useEffect but this useState from here. So now clearly we see that our linked list of hooks is different\n\n  // // Now one more thing that can happen is an early return:\n  // if (imdbRating > 8) return <p>Greatest ever!</p>; // Doing this will now give an error saying Rendered fewer hooks than expected and that's because we now have the three states from the top level but now, the 3 effects that we had are o longer created because of this early return. So instead of the 6 hooks, we now only have 3 hooks. So this again creates a big problem.\n\n  // // Lec 17. MORE DETAILS OF useState:\n  // // NOTE: in the useState hooks, the initial state that we pass only really matters on the initial render\n  // // So lets say we wanted something like if (imdbRating > 8) [isTop, setIsTop] = useState(true); to work here. So we wanted a piece of state called isTop which is true if the imdbRating is greater than 8. Now we cannot do if (imdbRating > 8) [isTop, setIsTop] = useState(true); as we already learned just above, but we might think that the just below line works:\n  // // const [isTop, setIsTop] = useState(imdbRating > 8);\n  // // console.log(isTop); // Now when we search for a movie(lets say interstellar) and select it, then we see that false is logged on console and it comes from this console.log() and false is logged even though the rating is actually greater than 8 and if we look at our list of hooks from the component tree, then we see that this state(which is the 4th state there) is false. This is because of the reason that whatever we pass into useState is the initial state and React will only look at this initial state on the initial render(so when the component first mounts). However, when the component first mounts here, the imdbRating will still be undefined and so the imdbRating > 0 that we passed inside useState here will be false and it will stay false forever because nowhere we update the state, and on second render, when we finally get tha movie data, this imdbRating > 8 that we passed in useState will not be executed again. So therefore, again, it will stay false forever. Now one way of fixing this would be useEffect as in the just below line:\n  // // useEffect(\n  // //   function () {\n  // //     setIsTop(imdbRating > 8); // In this case, now the above isTop is true when we select interstellar movie. We can even see the 4th state in the component tree, which will now be true.\n  // //   },\n  // //   [imdbRating] // we want to run this effect each time the imdbRating is changed so we passed it in dependency array\n  // // );\n  // // Now, ofcourse in this situation, we shouldn't even use a piece of state in the first place. So if the just above functionality of the state is what we really wanted then what we should do is derived state. So we should just do as in the just below line:\n  // const isTop2 = imdbRating > 8; // (in lecture just above code wass commented and variable here was isTop but I used isTop2 variable here)\n  // console.log(isTop2); // we see that this simple code for isTop2 derived state works seamlessly (So when we select interstellar movie, true is logged from this consol.log()). This is because this imdbRating variable here is generated each time that the function here is executed, so after each render.(So this is the power of derived stae, So it gets updated as the component gets re-rendered.)\n\n  // Now below we show another example that updating state is synchronous:\n  // For that, lets say we create a new state just below for displaying the average of the rating that we gave and the rating that is coming from IMDB, right there instead of closing the movie immediately. So for that we also comment the onCloseMovie() function call at the end of the handleAdd() function below:\n  const [averageRating, setAverageRating] = useState();\n\n  function handleAdd() {\n    const newWatchedMovie = {\n      imdbID: selectedId,\n      title,\n      year,\n      poster,\n      imdbRating: Number(imdbRating),\n      runtime: Number(runtime.split(\" \").at(0)),\n      userRating,\n    };\n    onAddWatched(newWatchedMovie);\n    // onCloseMovie();\n  }\n\n  useEffect(\n    function () {\n      function Callback(e) {\n        if (e.code === \"Escape\") onCloseMovie();\n        // console.log(\"CLOSING\");\n      }\n\n      document.addEventListener(\"keydown\", Callback);\n\n      return function () {\n        document.removeEventListener(\"keydown\", Callback);\n      };\n    },\n    [onCloseMovie]\n  );\n\n  useEffect(\n    function () {\n      async function getMovieDetails() {\n        setIsLoading(true);\n        const res = await fetch(\n          `http://www.omdbapi.com/?apiKey=${KEY}&i=${selectedId}`\n        );\n\n        const data = await res.json();\n        // console.log(data);\n        setMovie(data);\n        setIsLoading(false);\n      }\n      getMovieDetails();\n    },\n    [selectedId]\n  );\n\n  useEffect(\n    function () {\n      //we can change the title of the page in the browser just by setting document.title\n      if (!title) return;\n      document.title = `Movie | ${title}`;\n\n      // Cleanup function(A cleanup function is simply a function that we return from an effect):\n      return function () {\n        document.title = \"usePopcorn\";\n        // console.log(`Cleanup effect for movie ${title}`);\n      };\n    },\n    [title]\n  );\n\n  return (\n    <div className=\"details\">\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <>\n          <header>\n            <button className=\"btn-back\" onClick={onCloseMovie}>\n              &larr;\n            </button>\n            <img src={poster} alt={`Poster of ${movie} movie`} />\n            <div className=\"details-overview\">\n              <h2>{title}</h2>\n              <p>\n                {released} &bull; {runtime}\n              </p>\n              <p>{genre}</p>\n              <p>\n                <span>⭐</span>\n                {imdbRating} IMDB rating\n              </p>\n            </div>\n          </header>\n\n          <section>\n            <div className=\"rating\">\n              {!isWatched ? (\n                <>\n                  <StarRating\n                    maxRating={10}\n                    size={24}\n                    onSetRating={setUserRating}\n                  />\n\n                  {userRating > 0 && (\n                    <button className=\"btn-add\" onClick={handleAdd}>\n                      {/* here we passed another handler that will call the one we passed into this MovieDetails component(the onAddWatched prop that we passed) because\n                          we need to do a lot of things in it */}\n                      + Add to list\n                    </button>\n                  )}\n                </>\n              ) : (\n                <p>\n                  You rated this movie {watchedUserRating}\n                  <span>⭐</span>\n                </p>\n              )}\n            </div>\n            <p>\n              <em>{plot}</em>\n            </p>\n            <p>Starring {actors}</p>\n            <p>Directed by {director}</p>\n          </section>\n        </>\n      )}\n    </div>\n  );\n}\n\nfunction WatchedSummary({ watched }) {\n  const avgImdbRating = average(watched.map((movie) => movie.imdbRating));\n  const avgUserRating = average(watched.map((movie) => movie.userRating));\n  const avgRuntime = average(watched.map((movie) => movie.runtime));\n\n  return (\n    <div className=\"summary\">\n      <h2>Movies you watched</h2>\n      <div>\n        <p>\n          <span>#️⃣</span>\n          <span>{watched.length} movies</span>\n        </p>\n        <p>\n          <span>⭐️</span>\n          <span>{avgImdbRating.toFixed(2)}</span>\n        </p>\n        <p>\n          <span>🌟</span>\n          <span>{avgUserRating.toFixed(2)}</span>\n        </p>\n        <p>\n          <span>⏳</span>\n          <span>{avgRuntime} min</span>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nfunction WatchedMoviesList({ watched, onDeleteWatched }) {\n  return (\n    <ul className=\"list\">\n      {watched.map((movie) => (\n        <WatchedMovie\n          movie={movie}\n          key={movie.imdbID}\n          onDeleteWatched={onDeleteWatched}\n        />\n      ))}\n    </ul>\n  );\n}\n\nfunction WatchedMovie({ movie, onDeleteWatched }) {\n  return (\n    <li>\n      <img src={movie.poster} alt={`${movie.title} poster`} />\n      <h3>{movie.title}</h3>\n      <div>\n        <p>\n          <span>⭐️</span>\n          <span>{movie.imdbRating}</span>\n        </p>\n        <p>\n          <span>🌟</span>\n          <span>{movie.userRating}</span>\n        </p>\n        <p>\n          <span>⏳</span>\n          <span>{movie.runtime} min</span>\n        </p>\n\n        <button\n          className=\"btn-delete\"\n          onClick={() => onDeleteWatched(movie.imdbID)}\n        ></button>\n      </div>\n    </li>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}